name: CI

on: push

env:
  RUST_BACKTRACE: 1

jobs:

  ##########################
  # Linting and formatting #
  ##########################

  clippy:
    name: Clippy
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/medea-')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v1
      - run: make lint

  rustfmt:
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/medea-')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
      - run: make fmt check=yes




  ###########
  # Testing #
  ###########

  test-unit:
    name: Unit tests
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/medea-')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      matrix:
        crate:
          - medea-macro
          - medea-reactive
          - medea-coturn-telnet-client
          - medea-client-api-proto
          - medea
          - medea-jason
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: ${{ startsWith(github.ref, format('refs/tags/{0}-', matrix.crate))
                || !startsWith(github.ref, 'refs/tags/medea-') }}

      - uses: actions-rs/toolchain@v1
        if: ${{ matrix.crate != 'medea-jason'
                && (startsWith(github.ref,
                               format('refs/tags/{0}-', matrix.crate))
                    || !startsWith(github.ref, 'refs/tags/medea-')) }}
        with:
          profile: minimal
          toolchain: stable
      - uses: actions-rs/toolchain@v1
        if: ${{ matrix.crate == 'medea-jason'
                && (startsWith(github.ref,
                               format('refs/tags/{0}-', matrix.crate))
                    || !startsWith(github.ref, 'refs/tags/medea-')) }}
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v1
        if: ${{ startsWith(github.ref, format('refs/tags/{0}-', matrix.crate))
                || !startsWith(github.ref, 'refs/tags/medea-') }}

      - name: Get wasm-bindgen-cli version from Cargo.lock
        if: ${{ matrix.crate == 'medea-jason'
                && (startsWith(github.ref,
                               format('refs/tags/{0}-', matrix.crate))
                    || !startsWith(github.ref, 'refs/tags/medea-')) }}
        run: echo "WASM_CLI_VERSION=$(cargo pkgid wasm-bindgen
                                      | grep -o '#.*'
                                      | grep -o '[0-9\.]*')"
             >> $GITHUB_ENV
      - uses: actions-rs/install@v0.1
        if: ${{ matrix.crate == 'medea-jason'
                && (startsWith(github.ref,
                               format('refs/tags/{0}-', matrix.crate))
                    || !startsWith(github.ref, 'refs/tags/medea-')) }}
        with:
          crate: wasm-bindgen-cli
          version: ${{ env.WASM_CLI_VERSION }}
          use-tool-cache: true

      - name: Chrome
        if: ${{ matrix.crate == 'medea-jason'
                && (startsWith(github.ref,
                               format('refs/tags/{0}-', matrix.crate))
                    || !startsWith(github.ref, 'refs/tags/medea-')) }}
        run: make test.unit crate=${{ matrix.crate }} browser=chrome
      - name: Firefox
        if: ${{ matrix.crate == 'medea-jason'
                && (startsWith(github.ref,
                               format('refs/tags/{0}-', matrix.crate))
                    || !startsWith(github.ref, 'refs/tags/medea-')) }}
        run: make test.unit crate=${{ matrix.crate }} browser=firefox

      - run: make test.unit crate=${{ matrix.crate }}
        if: ${{ matrix.crate != 'medea-jason'
                && (startsWith(github.ref,
                               format('refs/tags/{0}-', matrix.crate))
                    || !startsWith(github.ref, 'refs/tags/medea-')) }}

  test-e2e:
    name: Run medea E2E tests
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/medea-')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - run: make test.e2e up=yes dockerized=no




  #################
  # Documentation #
  #################

  rustdoc:
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/medea-')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1

      # Run all task sequentially to not flood the jobs list.
      - run: make docs.rust crate=medea-macro open=no
        if: ${{ startsWith(github.ref, 'refs/tags/medea-macro-')
                || !startsWith(github.ref, 'refs/tags/medea-') }}

      - run: make docs.rust crate=medea-reactive open=no
        if: ${{ startsWith(github.ref, 'refs/tags/medea-reactive-')
                || !startsWith(github.ref, 'refs/tags/medea-') }}

      - run: make docs.rust crate=medea-coturn-telnet-client open=no
        if: ${{ startsWith(github.ref, 'refs/tags/medea-coturn-telnet-client-')
                || !startsWith(github.ref, 'refs/tags/medea-') }}

      - run: make docs.rust crate=medea-client-api-proto open=no
        if: ${{ startsWith(github.ref, 'refs/tags/medea-client-api-proto-')
                || !startsWith(github.ref, 'refs/tags/medea-') }}

      - run: make docs.rust crate=medea-control-api-proto open=no
        if: ${{ startsWith(github.ref, 'refs/tags/medea-control-api-proto-')
                || !startsWith(github.ref, 'refs/tags/medea-') }}

      - run: make docs.rust crate=medea-jason open=no
        if: ${{ startsWith(github.ref, 'refs/tags/medea-jason-')
                || !startsWith(github.ref, 'refs/tags/medea-') }}

      - run: make docs.rust crate=medea open=no
        if: ${{ !startsWith(github.ref, 'refs/tags/medea-')
                || startsWith(github.ref, 'refs/tags/medea-0')
                || startsWith(github.ref, 'refs/tags/medea-1')
                || startsWith(github.ref, 'refs/tags/medea-2')
                || startsWith(github.ref, 'refs/tags/medea-3')
                || startsWith(github.ref, 'refs/tags/medea-4')
                || startsWith(github.ref, 'refs/tags/medea-5')
                || startsWith(github.ref, 'refs/tags/medea-6')
                || startsWith(github.ref, 'refs/tags/medea-7')
                || startsWith(github.ref, 'refs/tags/medea-8')
                || startsWith(github.ref, 'refs/tags/medea-9') }}
                # just until GitHub Actions support regexes in expressions =)




  ##########################
  # Building and releasing #
  ##########################

  build-jason:
    name: Build medea-jason
    if: ${{ !startsWith(github.ref, 'refs/tags/medea-')
            && (github.ref == 'refs/heads/master'
                || !contains(github.event.head_commit.message, '[skip ci]')) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - uses: jetli/wasm-pack-action@v0.3.0
      - run: make cargo.build crate=medea-jason dockerized=no debug=yes

  build-medea:
    name: Build medea
    if: ${{ !startsWith(github.ref, 'refs/tags/medea-')
            && (github.ref == 'refs/heads/master'
                || !contains(github.event.head_commit.message, '[skip ci]')) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - run: make cargo.build crate=medea dockerized=no debug=yes

  release-cargo:
    name: Release on crates.io
    needs: ['clippy', 'rustfmt', 'rustdoc', 'test-e2e', 'test-unit']
    if: ${{ startsWith(github.ref, 'refs/tags/medea-') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Parse crate name and version
        id: crate
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ github.ref }}
          regex: '^refs/tags/(medea-[a-z-]*)-([0-9]+\.[0-9]+\.[0-9]+-?.*)$'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Release ${{ steps.crate.outputs.group2 }} version
              of ${{ steps.crate.outputs.group1 }} crate
        run: make release.crates crate=${{ steps.crate.outputs.group1 }}
                                 publish=yes

  release-npm:
    name: Release on NPM
    needs: ['release-cargo']
    if: ${{ startsWith(github.ref, 'refs/tags/medea-jason-') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Parse package name and version
        id: package
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ github.ref }}
          regex: '^refs/tags/(medea-[a-z-]*)-([0-9]+\.[0-9]+\.[0-9]+-?.*)$'
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '15'
      - name: Release ${{ steps.package.outputs.group2 }} version
              of ${{ steps.package.outputs.group1 }} package
        run: make release.npm crate=${{ steps.package.outputs.group1 }}
                              publish=yes
