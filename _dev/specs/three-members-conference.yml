kind: Room
id: three-members-conference
spec:
  pipeline:
    # Here we're defining a member who initiates video call.
    caller:
      kind: Member
      credentials: test
      spec:
        pipeline:
          # Media element which is able to receive media data from client
          # via WebRTC.
          publish:
            kind: WebRtcPublishEndpoint
            spec:
              # Actually, it receives not media data, but ICE candidates only.
              p2p: Always
          # Media element which is able to play media data for client
          # via WebRTC.
          play-responder-1:
            kind: WebRtcPlayEndpoint
            spec:
              src: "local://three-members-conference/responder-1/publish"
          play-responder-2:
            kind: WebRtcPlayEndpoint
            spec:
              src: "local://three-members-conference/responder-2/publish"
    responder-1:
      kind: Member
      credentials: test
      spec:
        pipeline:
          publish:
            kind: WebRtcPublishEndpoint
            spec:
              p2p: Always
          play-caller:
            kind: WebRtcPlayEndpoint
            spec:
              src: "local://three-members-conference/caller/publish"
          play-responder-2:
            kind: WebRtcPlayEndpoint
            spec:
              src: "local://three-members-conference/responder-2/publish"
    responder-2:
      kind: Member
      credentials: test
      spec:
        pipeline:
          publish:
            kind: WebRtcPublishEndpoint
            spec:
              p2p: Always
          play-caller:
            kind: WebRtcPlayEndpoint
            spec:
              src: "local://three-members-conference/caller/publish"
          play-responder-1:
            kind: WebRtcPlayEndpoint
            spec:
              src: "local://three-members-conference/responder-1/publish"
