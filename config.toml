[server.client.http]
# Client API HTTP server's public URL.
# It's assumed that HTTP server can be reached via this URL externally.
#
# Env var: MEDEA_SERVER__CLIENT__HTTP__PUBLIC_URL
# Default:
#   public_url = "ws://127.0.0.1:8080/ws"

# IP address to bind Client API HTTP server to.
#
# Env var: MEDEA_SERVER__CLIENT__HTTP__BIND_IP
# Default:
#   bind_ip = "0.0.0.0"

# Port to bind Client API HTTP server to.
#
# Env var: MEDEA_SERVER__CLIENT__HTTP__BIND_PORT
# Default:
#   bind_port = 8080


[server.control.grpc]
# IP address to bind Control API gRPC server to.
#
# Env var: MEDEA_SERVER__CONTROL__GRPC__BIND_IP
# Default:
#   bind_ip = "0.0.0.0"

# Port to bind Control API gRPC server to.
#
# Env var: MEDEA_SERVER__CONTROL__GRPC__BIND_PORT
# Default:
#   bind_port = 6565




[control]
# Path to directory with static Ð¡ontrol API specs.
#
# Env var: MEDEA_CONTROL__STATIC_SPECS_DIR
# Default:
#   static_specs_dir = "specs/"




[rpc]
# Duration, after which remote RPC client will be considered idle if no
# heartbeat messages received.
#
# It applies to all related pipelines as default value, but can be overridden
# for each specific case via Control API.
#
# Env var: MEDEA_RPC__IDLE_TIMEOUT
# Default:
#   idle_timeout = "10s"

# Duration, after which the server deletes client session if remote RPC client
# does not reconnect after it is idle.
#
# It applies to all related pipelines as default value, but can be overridden
# for each specific case via Control API.
#
# Env var: MEDEA_RPC__RECONNECT_TIMEOUT
# Default:
#   reconnect_timeout = "10s"

# Interval between pings that server sends to clients.
#
# It applies to all related pipelines as default value, but can be overridden
# for each specific case via Control API.
#
# Env var: MEDEA_RPC__PING_INTERVAL
# Default:
#   ping_interval = "3s"




[ice]
# Default kind of ICE servers to be used for WebRTC.
#
# Possible kinds:
# - "coturn": Medea uses a managed Coturn to dynamically create and cleanup its
#             credentials, kill client connections via its Admin CLI, gather its
#             allocation traffic information, and provides clients with only
#             this Coturn server for ICE.
#             See [ice.coturn] section for configuring managed Coturn.
# - "static": Medea provides clients a static list of unmanaged STUN/TURN
#             servers.
#             See [ice.static] section for specifying them.
#
# Env var: MEDEA_ICE__DEFAULT
# Default:
#   default = "coturn"


[ice.coturn]
# Host of Coturn server.
#
# Env var: MEDEA_ICE__COTURN__HOST
# Default:
#   host = "localhost"

# TURN port of Coturn server.
#
# Env var: MEDEA_ICE__COTURN__PORT
# Default:
#   port = 3478

# Name of static user to authenticate on Coturn server as.
#
# Env var: MEDEA_ICE__COTURN__USER
# Default:
#   user = "USER"

# Password of static user to authenticate on Coturn server with.
#
# Env var: MEDEA_ICE__COTURN__PASS
# Default:
#   pass = "PASS"


[ice.coturn.db.redis]
# Host of Coturn's Redis database server.
#
# Env var: MEDEA_ICE__COTURN__DB__REDIS__HOST
# Default:
#   host = "127.0.0.1"

# Port of Coturn's Redis database server for client connections.
#
# Env var: MEDEA_ICE__COTURN__DB__REDIS__PORT
# Default:
#   port = 6379

# User to authenticate on Coturn's Redis database server as.
#
# Env var: MEDEA_ICE__COTURN__DB__REDIS__USERNAME
# Default:
#   user = ""

# Password to authenticate on Coturn's Redis database server with.
#
# Env var: MEDEA_ICE__COTURN__DB__REDIS__PASS
# Default:
#   pass = "turn"

# Number of Coturn's database in Redis.
#
# Env var: MEDEA_ICE__COTURN__DB__REDIS__DB_NUMBER
# Default:
#   db_number = 0

# Timeout for establishing connection with Coturn's Redis database.
#
# Env var: MEDEA_ICE__COTURN__DB__REDIS__CONNECT_TIMEOUT
# Default:
#   connect_timeout = "5s"


[ice.coturn.cli]
# Host of Coturn's admin interface.
#
# Env var: MEDEA_ICE__COTURN__CLI__HOST
# Default:
#   host = "127.0.0.1"

# Port of Coturn's admin interface for Telnet connections.
#
# Env var: MEDEA_ICE__COTURN__CLI__PORT
# Default:
#   port = 5766

# Password to authenticate on Coturn's admin interface with.
#
# Env var: MEDEA_ICE__COTURN__CLI__PASS
# Default:
#   pass = "turn"

[ice.coturn.cli.pool]
# Maximum pool size of connections to Coturn's admin interface.
#
# Env var: MEDEA_ICE__COTURN__CLI__POOL__MAX_SIZE
# Default:
#   max_size = 16

# Waiting timeout for an available connection with Coturn's admin interface.
#
# "0" means no timeout and is not recommended.
#
# Env var: MEDEA_ICE__COTURN__CLI__POOL__WAIT_TIMEOUT
# Default:
#   wait_timeout = "2s"

# Timeout for establishing connection with Coturn's admin interface.
#
# "0" means no timeout and is not recommended.
#
# Env var: MEDEA_ICE__COTURN__CLI__POOL__CONNECT_TIMEOUT
# Default:
#   connect_timeout = "2s"

# Timeout for recycling established connection with Coturn's admin interface.
#
# "0" means no timeout and is not recommended.
#
# Env var: MEDEA_ICE__COTURN__CLI__POOL__RECYCLE_TIMEOUT
# Default:
#   recycle_timeout = "2s"


[ice.static]

# [ice.static.<name>]

# Comma-separated URLs of <name> STUN/TURN server.
#
# Env var: MEDEA_ICE__STATIC__<NAME>__URLS
# No default, must be specified.
# Example:
#   urls = "stun:stun.l.google.com:19302,stun:stun1.l.google.com:19302"

# Optional name of user to authenticate on <name> STUN/TURN server as.
#
# Env var: MEDEA_ICE__STATIC__<NAME>__USER
# Default is none.
# Example:
#   user = "USER"

# Optional password of user to authenticate on <name> STUN/TURN server with.
#
# Env var: MEDEA_ICE__STATIC__<NAME>__PASS
# Default is none.
# Example:
#   pass = "PASS"




[log]
# Maximum allowed level of application log entries.
#
# Env var: MEDEA_LOG__LEVEL
# Possible values:
#   "OFF", "CRITICAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE"
#
# Default:
#   level = "INFO"




[shutdown]
# Maximum duration given to shutdown the whole application gracefully.
#
# Env var: MEDEA_SHUTDOWN__TIMEOUT
# Default:
#   timeout = "5s"




[media]
# Max duration of media-flow lag, after which `on_stop` callback is fired.
#
# Env var: MEDEA_MEDIA__MAX_LAG
# Default:
#   max_lag = "15s"

# Timeout for peer to become active after it has been created.
#
# Env var: MEDEA_MEDIA__INIT_TIMEOUT
# Default:
#   init_timeout = "15s"
