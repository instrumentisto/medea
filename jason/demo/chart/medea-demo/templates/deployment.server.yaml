kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ printf "%s-server" (include "medea-demo.fullname" .) | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    helm.sh/chart: {{ include "medea-demo.chart" . | quote }}
    app.kubernetes.io/name: {{ include "medea-demo.name" . | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/component: server
  {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.server.deployment.revisionHistoryLimit | int }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "medea-demo.name" . | quote }}
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "medea-demo.name" . | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/component: server
      {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      annotations:
        checksum/conf: {{ pick (include (print $.Template.BasePath "/configmap.server.yaml") . | fromYaml) "data" | toYaml | sha256sum | quote }}
        checksum/cred: {{ pick (include (print $.Template.BasePath "/secret.server.yaml") . | fromYaml) "data" | toYaml | sha256sum | quote }}
      {{- with .Values.server.deployment.revision }}
        revision: {{ . | quote }}
      {{- end }}
      {{- with .Values.server.deployment.annotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
    {{- with .Values.server.deployment.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.server.deployment.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      {{- $coturn := .Values.server.coturn }}
      {{- $coturnDb := index .Values "server" "coturn-db" }}
        - name: medea
          image: {{ printf "%s:%s" .Values.server.image.repository .Values.server.image.tag | quote }}
          imagePullPolicy: {{ .Values.server.image.pullPolicy | quote }}
          env:
            - name: MEDEA_CONF
              value: /etc/medea.toml
            - name: MEDEA_TURN__PORT
              value: {{ index $coturn "conf" "listening-port" | quote }}
            - name: MEDEA_TURN__DB__REDIS__PORT
              value: {{ $coturnDb.conf.port | quote }}
            - name: MEDEA_TURN__CLI__PORT
              value: {{ index $coturn "conf" "cli-port" | quote }}
          envFrom:
            - secretRef:
                name: {{ printf "%s.server.cred" (include "medea-demo.fullname" .) | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.server.conf.server.client.http.bind_port | int }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.server.conf.server.control.grpc.bind_port | int }}
              protocol: TCP
          volumeMounts:
            - name: conf
              subPath: medea.toml
              mountPath: /etc/medea.toml
              readOnly: true
        {{- with .Values.server.deployment.resources }}
          resources: {{- toYaml . | nindent 12 }}
        {{- end }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.server.conf.server.client.http.bind_port | int }}
            initialDelaySeconds: 3
          readinessProbe:
            tcpSocket:
              port: {{ .Values.server.conf.server.client.http.bind_port | int }}
            initialDelaySeconds: 5
      {{- $controlMock := index .Values "server" "control-mock" }}
        - name: control-mock
          image: {{ printf "%s:%s" $controlMock.image.repository $controlMock.image.tag | quote }}
          imagePullPolicy: {{ $controlMock.image.pullPolicy | quote }}
          args:
            - --addr=0.0.0.0:{{ $controlMock.conf.bind_port | int }}
            - --medea-addr=http://127.0.0.1:{{ .Values.server.conf.server.control.grpc.bind_port | int }}
          env:
            - name: RUST_LOG
              value: {{ $controlMock.conf.log.level | quote }}
          ports:
            - name: control-http
              containerPort: {{ $controlMock.conf.bind_port | int }}
              protocol: TCP
        - name: coturn
          image: {{ printf "%s:%s" $coturn.image.repository $coturn.image.tag | quote }}
          imagePullPolicy: {{ $coturn.image.pullPolicy | quote }}
          command: ["turnserver"]
          args:
            - --log-file=stdout
            - --external-ip=$(EXTERNAL_IP)
            - --listening-ip=$(EXTERNAL_IP)
            - --relay-ip=$(EXTERNAL_IP)
            - --redis-userdb=ip=127.0.0.1 port={{ $coturnDb.conf.port | int }} dbname={{ .Values.server.conf.turn.db.redis.db_number }} password=$(MEDEA_TURN__DB__REDIS__PASS)
            - --redis-statsdb=ip=127.0.0.1 port={{ $coturnDb.conf.port | int }} dbname={{ .Values.server.conf.turn.db.redis.db_number }} password=$(MEDEA_TURN__DB__REDIS__PASS)
            - --user={{ .Values.server.conf.turn.user }}:$(MEDEA_TURN__PASS)
            - --cli-password=$(MEDEA_TURN__CLI__PASS)
          {{- with $coturn.extraArgs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: EXTERNAL_IP
            {{- if index $coturn "conf" "external-ip" }}
              value: {{ index $coturn "conf" "external-ip" | quote }}
            {{- else }}
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            {{- end }}
            - name: MEDEA_TURN__PASS
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s.server.cred" (include "medea-demo.fullname" .) | quote }}
                  key: MEDEA_TURN__PASS
            - name: MEDEA_TURN__DB__REDIS__PASS
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s.server.cred" (include "medea-demo.fullname" .) | quote }}
                  key: MEDEA_TURN__DB__REDIS__PASS
            - name: MEDEA_TURN__CLI__PASS
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s.server.cred" (include "medea-demo.fullname" .) | quote }}
                  key: MEDEA_TURN__CLI__PASS
          ports:
            - name: turn
              containerPort: {{ index $coturn "conf" "listening-port" | int }}
              protocol: TCP
            - name: turn-udp
              containerPort: {{ index $coturn "conf" "listening-port" | int }}
              protocol: UDP
          volumeMounts:
            - name: conf
              subPath: turnserver.conf
              mountPath: /etc/coturn/turnserver.conf
              readOnly: true
            - name: coturn-data
              mountPath: /var/lib/coturn
        {{- with $coturn.resources }}
          resources: {{- toYaml . | nindent 12 }}
        {{- end }}
          livenessProbe:
            tcpSocket:
              port: {{ index $coturn "conf" "listening-port" | int }}
            initialDelaySeconds: 3
          readinessProbe:
            tcpSocket:
              port: {{ index $coturn "conf" "listening-port" | int }}
            initialDelaySeconds: 5
        - name: coturn-db
          image: {{ printf "%s:%s" $coturnDb.image.repository $coturnDb.image.tag | quote }}
          imagePullPolicy: {{ $coturnDb.image.pullPolicy | quote }}
          args:
            - redis-server
            - /etc/redis.conf
            - --requirepass $(MEDEA_TURN__DB__REDIS__PASS)
          env:
            - name: MEDEA_TURN__DB__REDIS__PASS
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s.server.cred" (include "medea-demo.fullname" .) | quote }}
                  key: MEDEA_TURN__DB__REDIS__PASS
          volumeMounts:
            - name: conf
              subPath: redis.conf
              mountPath: /etc/redis.conf
              readOnly: true
        {{- with $coturnDb.resources }}
          resources: {{- toYaml . | nindent 12 }}
        {{- end }}
          livenessProbe:
            exec:
              command: ['redis-cli', '-p', '{{ $coturnDb.conf.port | int }}', 'ping']
            initialDelaySeconds: 3
          readinessProbe:
            exec:
              command: ['redis-cli', '-p', '{{ $coturnDb.conf.port | int }}', 'ping']
            initialDelaySeconds: 5
      volumes:
        - name: conf
          configMap:
            name: {{ printf "%s.server.conf" (include "medea-demo.fullname" .) | quote }}
        - name: coturn-data
          emptyDir: {}
